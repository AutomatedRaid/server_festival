Index: frontend/src/app/components/taller/taller.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {Component, OnInit} from '@angular/core';\r\nimport {FormControl, NgForm} from \"@angular/forms\";\r\nimport {Taller} from \"../../models/taller\";\r\nimport axios from 'axios';\r\nimport {EventoService} from \"../../services/evento.service\";\r\nimport {Actuacion} from \"../../models/actuacion\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\n\r\ndeclare const M: any;\r\n\r\nlet imageUploader;\r\nconst CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/djlgdcqhg/image/upload'\r\nconst CLOUDINARY_UPLOAD_PRESET = 'rdzzccwc';\r\n\r\n@Component({\r\n  selector: 'app-taller',\r\n  templateUrl: './taller.component.html',\r\n  styleUrls: ['./taller.component.css']\r\n})\r\n\r\nexport class TallerComponent implements OnInit {\r\n\r\n  ngModel: Taller;\r\n  horaIniciov = '';\r\n  horaFinv = '';\r\n  idTaller: number;\r\n  img: string | ArrayBuffer = 'assets/img-not-found.png';\r\n  img2: string | ArrayBuffer = 'assets/img-not-found.png';\r\n  private file1: any;\r\n  private file2: any;\r\n  taller: Taller;\r\n\r\n\r\n  constructor(private eventService: EventoService, private route: ActivatedRoute, private router: Router) {\r\n    this.ngModel = new Actuacion();\r\n  }\r\n\r\n  ngOnInit() {\r\n    imageUploader = document.getElementById('img-uploader');\r\n    M.AutoInit();\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n      var elems = document.querySelectorAll('.timepicker');\r\n      var instances = M.Timepicker.init(elems, {\r\n        defaultTime: '9:00',\r\n        twelveHour: false,\r\n        i18n: {cancel: 'Cancelar', done: 'Aceptar'}\r\n      });\r\n    });\r\n    this.route.paramMap.subscribe(params => {\r\n      if (params.has(\"id\")) {\r\n        console.log(params.get(\"id\"));\r\n        this.eventService.getTaller(params.get(\"id\") || \"\").subscribe(res => {\r\n          this.taller = res as Taller;\r\n          this.inicializarDatos();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async guardarTaller(actForm: NgForm) {\r\n    if (actForm.value.nombre != '' && actForm.value.descripcion != '' && this.horaFinv != '' && this.horaIniciov != '' && this.file1 != null && this.file2 != null) {\r\n      const taller: Taller = new Taller();\r\n      taller.nombre = actForm.value.nombre;\r\n      taller.horario = this.horaIniciov + ' - ' + this.horaFinv;\r\n      taller.descripcion = actForm.value.descripcion;\r\n      taller.img = await this.uploadimg(1);\r\n      taller.img_mapa = await this.uploadimg(2);\r\n      this.eventService.postTaller(taller).subscribe(res => {\r\n        M.toast({html: 'Taller guardado correctamente', classes: 'rounded'});\r\n      });\r\n    } else {\r\n      M.toast({html: 'Debe completar todos los campos primero!', classes: 'rounded'});\r\n    }\r\n  }\r\n\r\n  onSelectFile(event, number: number) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      switch (number) {\r\n        case 1:\r\n          this.file1 = event.target.files[0];\r\n          break;\r\n        case 2:\r\n          this.file2 = event.target.files[0];\r\n          break;\r\n      }\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (eventt) => {\r\n        console.log(eventt);\r\n        switch (number) {\r\n          case 1:\r\n            this.img = eventt.target.result;\r\n            break;\r\n          case 2:\r\n            this.img2 = eventt.target.result;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async uploadimg(number: number) {\r\n    let file: any;\r\n    if (number === 1) {\r\n      file = this.file1;\r\n    } else {\r\n      file = this.file2;\r\n    }\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET);\r\n\r\n    const res = await axios.post(\r\n      CLOUDINARY_URL,\r\n      formData,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      }\r\n    );\r\n    return res.data.url;\r\n  }\r\n\r\n  private inicializarDatos() {\r\n    this.ngModel.nombre = this.taller.nombre;\r\n    this.ngModel.descripcion = this.taller.descripcion;\r\n    this.horaIniciov = this.taller.horario.split(' - ')[0];\r\n    this.horaFinv = this.taller.horario.split(' - ')[1];\r\n    console.log(this.taller.horario);\r\n    // @ts-ignore\r\n    this.img = this.taller.img;\r\n    // @ts-ignore\r\n    this.img2 = this.taller.img_mapa;\r\n    console.log(this.horaIniciov);\r\n    console.log(this.horaFinv);\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- frontend/src/app/components/taller/taller.component.ts	(revision 60922192164cfaa20befcdd1edb6765a04a45596)
+++ frontend/src/app/components/taller/taller.component.ts	(date 1617182542440)
@@ -24,8 +24,7 @@
   horaIniciov = '';
   horaFinv = '';
   idTaller: number;
-  img: string | ArrayBuffer = 'assets/img-not-found.png';
-  img2: string | ArrayBuffer = 'assets/img-not-found.png';
+  img: String | ArrayBuffer = 'assets/img-not-found.png'; img2: String | ArrayBuffer = 'assets/img-not-found.png';
   private file1: any;
   private file2: any;
   taller: Taller;
@@ -128,9 +127,7 @@
     this.horaIniciov = this.taller.horario.split(' - ')[0];
     this.horaFinv = this.taller.horario.split(' - ')[1];
     console.log(this.taller.horario);
-    // @ts-ignore
     this.img = this.taller.img;
-    // @ts-ignore
     this.img2 = this.taller.img_mapa;
     console.log(this.horaIniciov);
     console.log(this.horaFinv);
Index: frontend/src/app/components/actuacion/actuacion.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><nav>\r\n  <div class=\"nav-wrapper\" style=\"padding-left: 5%;padding-right: 5%;\">\r\n    <label class=\"brand-logo\">Evento</label>\r\n  </div>\r\n</nav>\r\n<div class=\"container\">\r\n  <div class=\"card\" style=\"padding: 30px\">\r\n    <form #actForm=\"ngForm\">\r\n      <div class=\"input-field input-div\">\r\n        <input id=\"nombre_actuacion\" type=\"text\" name=\"nombre\" [(ngModel)]=\"ngModel.nombre\">\r\n        <label for=\"nombre_actuacion\" class=\"text-input\">Nombre actuación</label>\r\n      </div>\r\n      <div class=\"input-field input-div\">\r\n        <input type=\"text\" id=\"time-inicio\" class=\"timepicker\" name=\"horainicio\" readonly #horaInicio\r\n               (change)=\"horaIniciov = horaInicio.value\">\r\n        <label for=\"time-inicio\" class=\"text-input\">Hora inicio</label>\r\n      </div>\r\n      <div class=\"input-field input-div\">\r\n        <input type=\"text\" id=\"time-fin\" class=\"timepicker\" name=\"horafin\" readonly #horaFin\r\n               (change)=\"horaFinv = horaFin.value\">\r\n        <label for=\"time-fin\" class=\"text-input\">Hora fin</label>\r\n      </div>\r\n      <label class=\"text-input\">Artistas (max 25)</label>\r\n      <div class=\"row\">\r\n        <div class=\"col s6 row\" style=\"padding: 0px !important;\">\r\n          <input type=\"text\" class=\"form-control col s8\" id=\"url_img\" placeholder=\"Nombre artista\" aria-label=\"Url imagen\"\r\n                 #artista><div class=\"col s1\"></div>\r\n          <button class=\"btn btn-outline-secondary col s3\" type=\"button\" (click)=\"addArtistas(artista)\">Añadir</button>\r\n        </div>\r\n        <div class=\"col s6\">\r\n          <div class=\"chip\" *ngFor=\"let a of artistas\">\r\n            <span style=\"    position: relative; top: -5px;\">{{a}}</span>\r\n            <i class=\"material-icons\" (click)=\"removeArtistas(a)\">close</i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"input-field input-div\">\r\n        <textarea type=\"text\" id=\"descripcion\" class=\"materialize-textarea\" name=\"descripcion\"\r\n                  [(ngModel)]=\"ngModel.descripcion\"></textarea>\r\n        <label for=\"descripcion\" class=\"text-input\">Descripción</label>\r\n      </div>\r\n      <div class=\"row valign-wrapper\">\r\n        <div class=\"col s6\">\r\n          <label class=\"text-input\">Imagen de la actuación</label>\r\n          <div class=\"file-field input-field\" style=\"margin-top: 15px\">\r\n            <div class=\"btn\">\r\n              <span>File</span>\r\n              <input type=\"file\" accept=\"image/*\" (change)=\"onSelectFile($event, 1)\" id=\"img-uploader\">\r\n            </div>\r\n            <div class=\"file-path-wrapper\">\r\n              <input class=\"file-path validate\" accept=\"image/*\" type=\"text\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col s6\">\r\n          <img [src]=\"img\"\r\n               style=\"max-width: 100%\">\r\n        </div>\r\n      </div>\r\n      <div class=\"row valign-wrapper\">\r\n        <div class=\"col s6\">\r\n          <label class=\"text-input\">Imagen de la ubicación de la actuación</label>\r\n          <div class=\"file-field input-field\" style=\"margin-top: 15px\">\r\n            <div class=\"btn\">\r\n              <span>File</span>\r\n              <input type=\"file\" accept=\"image/*\" (change)=\"onSelectFile($event, 2)\">\r\n            </div>\r\n            <div class=\"file-path-wrapper\">\r\n              <input class=\"file-path validate\" accept=\"image/*\" type=\"text\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col s6\">\r\n          <img [src]=\"img2\"\r\n               style=\"max-width: 100%\">\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" style=\"margin-top: 50px\">\r\n        <div class=\"col s1\"></div>\r\n        <a class=\"waves-effect waves-light btn-large col s5 m4\" routerLink=\"/\">Cancelar</a>\r\n        <div class=\"col s1 m2\"></div>\r\n        <button class=\"waves-effect waves-light btn-large col s5 m4\" type=\"button\" (click)=\"guardarActuacion(actForm)\">\r\n          Guardar\r\n        </button>\r\n        <div class=\"col s1\"></div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div id=\"modal1\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n      <h4>Guardando actuación</h4>\r\n      <p>{{alertBody}}</p>\r\n      <progress id=\"img-upload-bar\" value=\"0\" max=\"100\" style=\"width: 100%; margin: 10px 0;\"></progress>\r\n    </div>\r\n  </div>\r\n</div>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- frontend/src/app/components/actuacion/actuacion.component.html	(revision 60922192164cfaa20befcdd1edb6765a04a45596)
+++ frontend/src/app/components/actuacion/actuacion.component.html	(date 1617184487215)
@@ -8,7 +8,7 @@
     <form #actForm="ngForm">
       <div class="input-field input-div">
         <input id="nombre_actuacion" type="text" name="nombre" [(ngModel)]="ngModel.nombre">
-        <label for="nombre_actuacion" class="text-input">Nombre actuación</label>
+        <label for="nombre_actuacion" class="text-input active">Nombre actuación</label>
       </div>
       <div class="input-field input-div">
         <input type="text" id="time-inicio" class="timepicker" name="horainicio" readonly #horaInicio
