Index: frontend/src/app/components/taller/taller.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {Component, OnInit} from '@angular/core';\r\nimport {FormControl, NgForm} from \"@angular/forms\";\r\nimport {Taller} from \"../../models/taller\";\r\nimport axios from 'axios';\r\nimport {EventoService} from \"../../services/evento.service\";\r\nimport {Actuacion} from \"../../models/actuacion\";\r\n\r\ndeclare const M: any;\r\n\r\nlet imageUploader;\r\nconst CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/djlgdcqhg/image/upload'\r\nconst CLOUDINARY_UPLOAD_PRESET = 'rdzzccwc';\r\n@Component({\r\n  selector: 'app-taller',\r\n  templateUrl: './taller.component.html',\r\n  styleUrls: ['./taller.component.css']\r\n})\r\n\r\nexport class TallerComponent implements OnInit {\r\n\r\n  ngModel: Taller;\r\n  horaIniciov = '';\r\n  horaFinv = '';\r\n  img: string | ArrayBuffer = 'assets/img-not-found.png';\r\n  img2: string | ArrayBuffer = 'assets/img-not-found.png';\r\n  private file1: any;\r\n  private file2: any;\r\n\r\n  constructor(private eventService: EventoService) {\r\n    this.ngModel = new Actuacion();\r\n  }\r\n\r\n  ngOnInit() {\r\n    imageUploader = document.getElementById('img-uploader');\r\n    M.AutoInit();\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n      var elems = document.querySelectorAll('.timepicker');\r\n      var instances = M.Timepicker.init(elems, {\r\n        defaultTime: '9:00',\r\n        twelveHour: false,\r\n        i18n: {cancel: 'Cancelar', done: 'Aceptar'}\r\n      });\r\n    });\r\n  }\r\n\r\n  async guardarTaller(actForm: NgForm) {\r\n    if (actForm.value.nombre != '' && actForm.value.descripcion != '' && this.horaFinv != '' && this.horaIniciov != '' && this.file1 != null && this.file2 != null) {\r\n      const taller: Taller = new Taller();\r\n      taller.nombre = actForm.value.nombre;\r\n      taller.horario = this.horaIniciov + ' - ' + this.horaFinv;\r\n      taller.descripcion = actForm.value.descripcion;\r\n      taller.img = await this.uploadimg(1);\r\n      taller.img_mapa = await this.uploadimg(2);\r\n      this.eventService.postTaller(taller).subscribe(res => {\r\n        M.toast({html: 'Taller guardado correctamente', classes: 'rounded'});\r\n      });\r\n    } else {\r\n      M.toast({html: 'Debe completar todos los campos primero!', classes: 'rounded'});\r\n    }\r\n  }\r\n\r\n  onSelectFile(event, number: number) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      switch (number) {\r\n        case 1:\r\n          this.file1 = event.target.files[0];\r\n          break;\r\n        case 2:\r\n          this.file2 = event.target.files[0];\r\n          break;\r\n      }\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (eventt) => {\r\n        console.log(eventt);\r\n        switch (number) {\r\n          case 1:\r\n            this.img = eventt.target.result;\r\n            break;\r\n          case 2:\r\n            this.img2 = eventt.target.result;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async uploadimg(number: number) {\r\n    let file: any;\r\n    if (number === 1) {\r\n      file = this.file1;\r\n    } else {\r\n      file = this.file2;\r\n    }\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET);\r\n\r\n    const res = await axios.post(\r\n      CLOUDINARY_URL,\r\n      formData,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        onUploadProgress(e) {\r\n          let progress = Math.round((e.loaded * 100.0) / e.total);\r\n          console.log(progress);\r\n        }\r\n      }\r\n    );\r\n    return res.data.url;\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- frontend/src/app/components/taller/taller.component.ts	(revision 9459c28965e8c6f00613ad6da718e8fefdc4db09)
+++ frontend/src/app/components/taller/taller.component.ts	(date 1617096601246)
@@ -4,6 +4,7 @@
 import axios from 'axios';
 import {EventoService} from "../../services/evento.service";
 import {Actuacion} from "../../models/actuacion";
+import {ActivatedRoute, Router} from "@angular/router";
 
 declare const M: any;
 
@@ -21,12 +22,15 @@
   ngModel: Taller;
   horaIniciov = '';
   horaFinv = '';
+  idTaller: number;
   img: string | ArrayBuffer = 'assets/img-not-found.png';
   img2: string | ArrayBuffer = 'assets/img-not-found.png';
   private file1: any;
   private file2: any;
+  taller: Taller;
 
-  constructor(private eventService: EventoService) {
+
+  constructor(private eventService: EventoService, private route: ActivatedRoute, private router: Router) {
     this.ngModel = new Actuacion();
   }
 
@@ -41,6 +45,17 @@
         i18n: {cancel: 'Cancelar', done: 'Aceptar'}
       });
     });
+    this.route.paramMap.subscribe(params => {
+      if (params.has("id")){
+        this.eventService.getTaller(params.get("id") || "").subscribe(res => {
+          this.taller = res as Taller;
+          this.inicializarDatos();
+        });
+      }
+    });
+    if (this.idTaller == null){
+
+    }
   }
 
   async guardarTaller(actForm: NgForm) {
Index: frontend/src/app/services/evento.service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Injectable } from '@angular/core';\r\nimport {Actuacion} from \"../models/actuacion\";\r\nimport {Taller} from \"../models/taller\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventoService {\r\n\r\n  URL_API = 'http://45.84.0.19:3000/api/adminapp';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  postActuacion (actuacion: Actuacion){\r\n    return this.http.post(this.URL_API + '/actuacion', actuacion);\r\n  }\r\n\r\n  postTaller (taller: Taller){\r\n    return this.http.post(this.URL_API + '/taller', taller);\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- frontend/src/app/services/evento.service.ts	(revision 9459c28965e8c6f00613ad6da718e8fefdc4db09)
+++ frontend/src/app/services/evento.service.ts	(date 1617096601206)
@@ -20,4 +20,8 @@
   postTaller (taller: Taller){
     return this.http.post(this.URL_API + '/taller', taller);
   }
+
+  getTaller(id: string) {
+    return this.http.get(this.URL_API +)
+  }
 }
